{
  "_args": [
    [
      "https://github.com/1602/jugglingdb/archive/master.tar.gz",
      "F:\\ExpressProject"
    ]
  ],
  "_from": "https://github.com/1602/jugglingdb/archive/master.tar.gz",
  "_id": "jugglingdb@2.0.0-rc8",
  "_inCache": true,
  "_installable": true,
  "_location": "/jugglingdb",
  "_phantomChildren": {},
  "_requested": {
    "name": null,
    "raw": "https://github.com/1602/jugglingdb/archive/master.tar.gz",
    "rawSpec": "https://github.com/1602/jugglingdb/archive/master.tar.gz",
    "scope": null,
    "spec": "https://github.com/1602/jugglingdb/archive/master.tar.gz",
    "type": "remote"
  },
  "_requiredBy": [
    "/"
  ],
  "_resolved": "https://github.com/1602/jugglingdb/archive/master.tar.gz",
  "_shasum": "cf7d12e4e07ba381d6637df3140afa5621262c13",
  "_shrinkwrap": null,
  "_spec": "https://github.com/1602/jugglingdb/archive/master.tar.gz",
  "_where": "F:\\ExpressProject",
  "author": {
    "email": "rpm1602@gmail.com",
    "name": "Anatoliy Chakkaev"
  },
  "bugs": {
    "url": "https://github.com/1602/jugglingdb/issues"
  },
  "contributors": [
    {
      "email": "rpm1602@gmail.com",
      "name": "Anatoliy Chakkaev"
    },
    {
      "email": "julien.guimont@gmail.com",
      "name": "Julien Guimont"
    },
    {
      "email": "joseph.jnk@gmail.com",
      "name": "Joseph Junker"
    },
    {
      "email": "henri.bergius@iki.fi",
      "name": "Henri Bergius"
    },
    {
      "email": "fabopereira@gmail.com",
      "name": "redvulps"
    },
    {
      "email": "fsateler@gmail.com",
      "name": "Felipe Sateler"
    },
    {
      "email": "a@geeknux.com",
      "name": "Amir M. Mahmoudi"
    },
    {
      "email": "justinas@justinas.me",
      "name": "Justinas Stankevičius"
    },
    {
      "email": "patrick.n.otoole@gmail.com",
      "name": "Rick O'Toole"
    },
    {
      "email": "nicholasredlin@gmail.com",
      "name": "Nicholas Westlake"
    }
  ],
  "dependencies": {
    "inflection": "=1.2.7",
    "mocha": "^2.5.3",
    "should": "^9.0.2",
    "when": "3.7.3"
  },
  "description": "Node.js ORM for every database: redis, mysql, mongodb, postgres, sqlite, ...",
  "devDependencies": {
    "babel-cli": "^6.11.4",
    "babel-preset-es2015": "^6.9.0",
    "babel-register": "^6.11.5",
    "eslint": "^3.2.0",
    "eslint-config-1602": "^1.2.0",
    "expect": "^1.20.2",
    "istanbul": "^0.4.4",
    "jshint": "2.9.2",
    "mocha": "2.5.3",
    "should": "9.0.2"
  },
  "engines": [
    "node >= 0.6"
  ],
  "homepage": "https://github.com/1602/jugglingdb#readme",
  "jshintConfig": {
    "proto": true
  },
  "license": "MIT",
  "main": "main.js",
  "man": [
    "./docs/man/jugglingdb.3",
    "./docs/man/schema.3",
    "./docs/man/model.3",
    "./docs/man/hooks.3",
    "./docs/man/validations.3",
    "./docs/man/roadmap.3",
    "./docs/man/changelog.3"
  ],
  "name": "jugglingdb",
  "optionalDependencies": {},
  "readme": "[![NPM Version][npm-image]][npm-url]\n[![NPM Downloads][downloads-image]][downloads-url]\n[![Build status][build-image]][build-url]\n[![Test Coverage][coveralls-image]][coveralls-url]\n\n## About\n\n[JugglingDB](http://1602.github.io/jugglingdb/) is cross-db ORM for nodejs, providing\n**common interface** to access most popular database formats.  Currently\nsupported are: mysql, sqlite3, postgres, mongodb, redis and\njs-memory-storage (yep, self-written engine for test-usage only). You can add\nyour favorite database adapter, checkout one of the existing adapters to learn\nhow.\n\nJugglingdb also works on client-side (using WebService and Memory adapters),\nwhich allows to write rich client-side apps talking to server using JSON API.\n\n## Installation\n\n    npm install jugglingdb\n\nand you should install appropriate adapter, for example for redis:\n\n    npm install jugglingdb-redis-hq\n\ncheck following list of available adapters\n\n## JugglingDB adapters\n\n<table>\n  <thead>\n    <tr>\n      <th>Database type</th>\n      <th>Package name</th>\n      <th>Maintainer</th>\n      <th>Build status / coverage</th>\n    </tr>\n  </thead>\n  <tbody>\n    <!-- ArangoDB -->\n    <tr>\n      <td><a href=\"http://www.arangodb.org/\"><img width=\"16\" height=\"16\" src=\"https://www.arangodb.com/wp-content/uploads/2016/03/small-1.png\" style=\"vertical-align:middle\" alt=\"ArangoDB\" /></a> ArangoDB</td>\n      <td><a href=\"https://github.com/m0ppers/jugglingdb-arango\">jugglingdb-arango</a></td>\n      <td><a href=\"https://github.com/m0ppers\">Andreas Streichardt</a></td>\n      <td><a href=\"https://travis-ci.org/m0ppers/jugglingdb-arango\"><img src=\"https://travis-ci.org/m0ppers/jugglingdb-arango.svg?branch=master\" alt=\"Build Status\" /></a></td>\n    </tr>\n    \n    <!-- Firebird\n    <tr>\n      <td><a href=\"http://firebirdsql.org\"><img src=\"http://firebirdsql.org/favicon.ico\" alt=\"Firebird\"/></a> Firebird</td>\n      <td><a href=\"http://github.com/hgourvest/jugglingdb-firebird\">jugglingdb-firebird</a></td>\n      <td><a href=\"http://github.com/hgourvest\">Henri Gourvest</a></td>\n    </tr-->\n\n    <!-- MongoDB -->\n    <tr>\n      <td><a href=\"http://www.mongodb.org\"><img width=\"16\" height=\"16\" src=\"https://www.mongodb.com/assets/images/global/favicon.ico\" alt=\"MongoDB\" /></a> MongoDB</td>\n      <td><a href=\"https://github.com/jugglingdb/mongodb-adapter\">jugglingdb-mongodb</a></td>\n      <td><a href=\"https://github.com/1602\">Anatoliy Chakkaev</a></td>\n      <td><a href=\"https://circleci.com/gh/jugglingdb/mongodb-adapter\"><img src=\"https://circleci.com/gh/jugglingdb/mongodb-adapter.svg?&style=shield\" alt=\"Build Status\" /></a> <a href='https://coveralls.io/github/jugglingdb/mongodb-adapter?branch=master'><img src='https://coveralls.io/repos/github/jugglingdb/mongodb-adapter/badge.svg?branch=master' alt='Coverage Status' /></a></td>\n    </tr>\n\n    <!-- MySQL -->\n    <tr>\n      <td><a href=\"http://www.mysql.com/\"><img width=\"16\" height=\"16\" src=\"http://www.mysql.com/common/themes/sakila/favicon.ico\" style=\"vertical-align:middle\"\" alt=\"MySQL\" /></a> MySQL</td>\n      <td><a href=\"https://github.com/jugglingdb/mysql-adapter\">jugglingdb-mysql</a></td>\n      <td><a href=\"https://github.com/dgsan\">dgsan</a></td>\n      <td><a href=\"https://circleci.com/gh/jugglingdb/mysql-adapter\"><img src=\"https://circleci.com/gh/jugglingdb/mysql-adapter.svg?style=shield\" alt=\"Build Status\" /></a> <a href='https://coveralls.io/github/jugglingdb/mysql-adapter?branch=master'><img src='https://coveralls.io/repos/github/jugglingdb/mysql-adapter/badge.svg?branch=master' alt='Coverage Status' /></a></td>\n    </tr>\n\n    <!-- CouchDB / nano\n    <tr>\n      <td><a href=\"http://couchdb.apache.org/\"><img width=\"16\" src=\"http://couchdb.apache.org/favicon.ico\" style=\"vertical-align:middle\"\" alt=\"CouchDB\" /></a> CouchDB / nano</td>\n      <td><a href=\"https://github.com/jugglingdb/nano-adapter\">jugglingdb-nano</a></td>\n      <td><a href=\"https://github.com/nrw\">Nicholas Westlake</a></td>\n      <td><a href=\"https://travis-ci.org/jugglingdb/nano-adapter\"><img src=\"https://travis-ci.org/jugglingdb/nano-adapter.svg?branch=master\" alt=\"Build Status\" /></a></td>\n    </tr-->\n\n    <!-- PostgreSQL -->\n    <tr>\n      <td><a href=\"http://www.postgresql.org/\"><img src=\"http://www.postgresql.org/favicon.ico\" style=\"vertical-align:middle\"\" alt=\"PostgreSQL\" /></a> PostgreSQL</td>\n      <td><a href=\"https://github.com/jugglingdb/postgres-adapter\">jugglingdb-postgres</a></td>\n      <td><a href=\"https://github.com/1602\">Anatoliy Chakkaev</a></td>\n      <td><a href=\"https://circleci.com/gh/jugglingdb/postgres-adapter\"><img src=\"https://circleci.com/gh/jugglingdb/postgres-adapter.svg?style=shield\" alt=\"Build Status\" /></a> <a href='https://coveralls.io/github/jugglingdb/postgres-adapter?branch=master'><img src='https://coveralls.io/repos/github/jugglingdb/postgres-adapter/badge.svg?branch=master' alt='Coverage Status' /></a></td>\n    </tr>\n\n    <!-- Redis -->\n    <tr>\n      <td><a href=\"http://redis.io/\"><img src=\"http://redis.io/images/favicon.png\" alt=\"Redis\" /></a> Redis</td>\n      <td><a href=\"https://github.com/jugglingdb/redis-hq-adapter\">jugglingdb-redis-hq</a></td>\n      <td><a href=\"https://github.com/1602\">Anatoliy Chakkaev</a></td>\n      <td><a href=\"https://circleci.com/gh/jugglingdb/redis-hq-adapter\"><img src=\"https://circleci.com/gh/jugglingdb/redis-hq-adapter.svg?style=shield\" alt=\"Build Status\" /></a> <a href='https://coveralls.io/github/jugglingdb/redis-hq-adapter?branch=master'><img src='https://coveralls.io/repos/github/jugglingdb/redis-hq-adapter/badge.svg?branch=master' alt='Coverage Status' /></a></td>\n    </tr>\n\n    <!-- RethinkDB\n    <tr>\n      <td><a href=\"http://www.rethinkdb.com/\"><img src=\"http://www.rethinkdb.com/favicon.ico\" alt=\"RethinkDB\" width=\"16\" height=\"16\" /></a> RethinkDB</td>\n      <td><a href=\"https://github.com/fuwaneko/jugglingdb-rethink\">jugglingdb-rethink</a></td>\n      <td><a href=\"https://github.com/fuwaneko\">Tewi Inaba</a></td>\n      <td><a href=\"https://travis-ci.org/fuwaneko/jugglingdb-rethink\"><img src=\"https://travis-ci.org/fuwaneko/jugglingdb-rethink.svg?branch=master\" alt=\"Build Status\" /></a></td>\n    </tr -->\n\n    <!-- SQLite 3 -->\n    <tr>\n      <td><a href=\"http://www.sqlite.org/\"><img width=\"16\" src=\"https://www.sqlmaestro.com/data/181/1249905374-32x32.gif\" style=\"vertical-align:middle\" alt=\"SQLite\" /></a> SQLite</td>\n      <td><a href=\"https://github.com/jugglingdb/sqlite3-adapter\">jugglingdb-sqlite3</a></td>\n      <td><a href=\"https://github.com/anatoliychakkaev\">Anatoliy Chakkaev</a></td>\n      <td><a href=\"https://circleci.com/gh/jugglingdb/sqlite3-adapter\"><img src=\"https://circleci.com/gh/jugglingdb/sqlite3-adapter.svg?style=shield\" alt=\"Build Status\" /></a> <a href='https://coveralls.io/github/jugglingdb/sqlite3-adapter?branch=master'><img src='https://coveralls.io/repos/github/jugglingdb/sqlite3-adapter/badge.svg?branch=master' alt='Coverage Status' /></a></td>\n    </tr>\n    <tr>\n      <td>WebService</td>\n      <td>built-in</td>\n      <td><a href=\"https://github.com/1602\">Anatoliy Chakkaev</a></td>\n      <td>n/a</td>\n    </tr>\n    <tr>\n      <td>Memory (bogus)</td>\n      <td>built-in</td>\n      <td><a href=\"https://github.com/1602\">Anatoliy Chakkaev</a></td>\n      <td>n/a</td>\n    </tr>\n    \n    <!-- DynamoDB -->\n    <tr>\n      <td><a href=\"http://en.wikipedia.org/wiki/Amazon_DynamoDB\"> DynamoDB </a></td>\n      <td><a href=\"https://github.com/tmpaul/jugglingdb-dynamodb\">jugglingdb-dynamodb</a></td>\n      <td><a href=\"https://github.com/tmpaul\">tmpaul</a></td>\n      <td><a href=\"https://travis-ci.org/tmpaul/jugglingdb-dynamodb\"><img src=\"https://travis-ci.org/tmpaul/jugglingdb-dynamodb.svg?branch=master\" alt=\"Build Status\" /></a></td>\n    </tr>\n    \n    <tr>\n      <td><a href=\"http://www.microsoft.com/en-ca/server-cloud/products/sql-server/\">SQL Server<a></td>\n      <td><a href=\"https://github.com/Quadrus/jugglingdb-mssql\">jugglingdb-mssql</a></td>\n      <td><a href=\"https://github.com/Quadrus\">Quadrus</a></td>\n      <td>n/a</td>\n    </tr>\n    \n    <tr>\n      <td><a href=\"https://msdn.microsoft.com/en-us/library/azure/jj553018.aspx\">Azure Table Storage<a></td>\n      <td><a href=\"https://github.com/yads/jugglingdb-azure-tablestorage\">jugglingdb-azure-tablestorage</a></td>\n      <td><a href=\"https://github.com/yads\">Vadim Kazakov</a></td>\n      <td>n/a</td>\n    </tr>\n\n  </tbody>\n</table>\n\n## Participation\n\n- Check status of project on trello board: https://trello.com/board/jugglingdb/4f0a0b1e27d3103c64288388\n- Make sure all tests pass (`npm test` command)\n- Feel free to vote and comment on cards (tickets/issues), if you want to join team -- send me a message with your email.\n\nIf you want to create your own jugglingdb adapter, you should publish your\nadapter package with name `jugglingdb-ADAPTERNAME`. Creating adapter is simple,\ncheck [jugglingdb/redis-adapter](https://github.com/jugglingdb/redis-adapter) for example. JugglingDB core\nexports common tests each adapter should pass, you could create your adapter in\nTDD style, check that adapter pass all tests defined in `test/common_test.js`.\n\n## Usage\n\n```javascript\nvar Schema = require('jugglingdb').Schema;\nvar schema = new Schema('redis', {port: 6379}); //port number depends on your configuration\n// define models\nvar Post = schema.define('Post', {\n    title:     { type: String, length: 255 },\n    content:   { type: Schema.Text },\n    date:      { type: Date,    default: function () { return new Date;} },\n    timestamp: { type: Number,  default: Date.now },\n    published: { type: Boolean, default: false, index: true }\n});\n\n// simplier way to describe model\nvar User = schema.define('User', {\n    name:         String,\n    bio:          Schema.Text,\n    approved:     Boolean,\n    joinedAt:     Date,\n    age:          Number\n}, {\n    restPath: '/users' // tell WebService adapter which path use as API endpoint\n});\n\nvar Group = schema.define('Group', {name: String});\n\n// define any custom method\nUser.prototype.getNameAndAge = function () {\n    return this.name + ', ' + this.age;\n};\n\n// models also accessible in schema:\nschema.models.User;\nschema.models.Post;\n```\n\nSEE [schema(3)](http://1602.github.io/jugglingdb/schema.3.html) for details schema usage.\n\n```javascript\n// setup relationships\nUser.hasMany(Post,   {as: 'posts',  foreignKey: 'userId'});\n// creates instance methods:\n// user.posts(conds)\n// user.posts.build(data) // like new Post({userId: user.id});\n// user.posts.create(data) // build and save\n\nPost.belongsTo(User, {as: 'author', foreignKey: 'userId'});\n// creates instance methods:\n// post.author(callback) -- getter when called with function\n// post.author() -- sync getter when called without params\n// post.author(user) -- setter when called with object\n\nUser.hasAndBelongsToMany('groups');\n// user.groups(callback) - get groups of user\n// user.groups.create(data, callback) - create new group and connect with user\n// user.groups.add(group, callback) - connect existing group with user\n// user.groups.remove(group, callback) - remove connection between group and user\n\nschema.automigrate(); // required only for mysql and postgres NOTE: it will drop User and Post tables\n\n// work with models:\nvar user = new User;\nuser.save(function (err) {\n    var post = user.posts.build({title: 'Hello world'});\n    post.save(console.log);\n});\n\n// or just call it as function (with the same result):\nvar user = User();\nuser.save(...);\n\n// Common API methods\n// each method returns promise, or may accept callback as last param\n\n// just instantiate model\nnew Post({ published: 0, userId: 1 });\n\n// save model (of course async)\nPost.create();\n\n// all posts\nPost.all();\n\n// all posts by user\nPost.all({ where: { userId: user.id }, order: 'id', limit: 10, skip: 20 });\n\n// the same as prev\nuser.posts(cb)\n\n// get one latest post\nPost.findOne({ where: { published: true }, order: 'date DESC' });\n\n// same as new Post({userId: user.id});\nuser.posts.build({ published: 1 });\n\n// save as Post.create({userId: user.id});\nuser.posts.create();\n\n// find instance by id\nUser.find(1);\n\n// find instance by id and reject promise when not found\nUser.fetch(1)\n    .then(user => console.log('found user', user))\n    .catch(err => console.error('can not fetch user with id 1:', err));\n\n// count instances\nUser.count([conditions])\n\n// destroy instance\nuser.destroy();\n\n// destroy all instances\nUser.destroyAll();\n\n// update multiple instances (currently only on the sql adapters)\nPost.bulkUpdate({ update: { published: 0 }, where: { id: [1, 2, 3] }});\n\n// update single instance\nPost.update(1, { published: 1 });\n```\n\nSEE [model(3)](http://1602.github.com/jugglingdb/model.3.html) for more information about\njugglingdb Model API. Or `man jugglingdb-model` in terminal.\n\n```javascript\n\n// Setup validations\nUser.validatesPresenceOf('name', 'email')\nUser.validatesLengthOf('password', {min: 5, message: {min: 'Password is too short'}});\nUser.validatesInclusionOf('gender', {in: ['male', 'female']});\nUser.validatesExclusionOf('domain', {in: ['www', 'billing', 'admin']});\nUser.validatesNumericalityOf('age', {int: true});\nUser.validatesUniquenessOf('email', {message: 'email is not unique'});\n\nuser.isValid(function (valid) {\n    if (!valid) {\n        user.errors // hash of errors {attr: [errmessage, errmessage, ...], attr: ...}    \n    }\n})\n\n```\n\nSEE ALSO [jugglingdb-validations(3)](http://1602.github.com/jugglingdb/validations.3.html) or\n`man jugglingdb-validations` in terminal. Validation tests: ./test/validations.test.js\n\n## Hooks\n\nThe following hooks supported:\n\n    - afterInitialize\n    - beforeCreate\n    - afterCreate\n    - beforeSave\n    - afterSave\n    - beforeUpdate\n    - afterUpdate\n    - beforeDestroy\n    - afterDestroy\n    - beforeValidate\n    - afterValidate\n\nEach callback is class method of the model, it should accept single argument: `next`, this is callback which should be called after end of the hook. Except `afterInitialize` because this method is syncronous (called after `new Model`).\n\nDuring beforehooks the `next` callback accepts one argument, which is used to terminate flow. The argument passed on as the `err` parameter to the API method callback.\n\n## Object lifecycle:\n\n```javascript\nvar user = new User;\n// afterInitialize\nuser.save(callback); // If Model.id isn't set, save will invoke Model.create() instead\n// beforeValidate\n// afterValidate\n// beforeSave\n// beforeUpdate\n// afterUpdate\n// afterSave\n// callback\nuser.updateAttribute('email', 'email@example.com', callback);\n// beforeValidate\n// afterValidate\n// beforeSave\n// beforeUpdate\n// afterUpdate\n// afterSave\n// callback\nuser.destroy(callback);\n// beforeDestroy\n// afterDestroy\n// callback\nUser.create(data, callback);\n// beforeValidate\n// afterValidate\n// beforeCreate\n// beforeSave\n// afterSave\n// afterCreate\n// callback\n```\n\nSEE [jugglingdb-hooks](http://1602.github.com/jugglingdb/hooks.3.html) or type this command\nin your fav terminal: `man jugglingdb-hooks`. Also check tests for usage\nexamples: ./test/hooks.test.js\n\n## Your own database adapter\n\nTo use custom adapter, pass it's package name as first argument to `Schema` constructor:\n\n    var mySchema = new Schema('mycouch', {host:.., port:...});\n\nIn that case your adapter should be named as 'jugglingdb-mycouch' npm package.\n\n## Testing [outdated]\n\nTODO: upd this section\n\nCore of jugglingdb tests only basic features (database-agnostic) like\nvalidations, hooks and runs db-specific tests using memory storage. It also\nexports complete bucket of tests for external running. Each adapter should run\nthis bucket (example from `jugglingdb-redis`):\n\n    var jdb = require('jugglingdb'),\n    Schema = jdb.Schema,\n    test = jdb.test;\n\n    var schema = new Schema(__dirname + '/..', {host: 'localhost', database: 1});\n\n    test(module.exports, schema);\n\nEach adapter could add specific tests to standart bucket:\n\n    test.it('should do something special', function (test) {\n        test.done();\n    });\n\nOr it could tell core to skip some test from bucket:\n\n    test.skip('name of test case');\n\nTo run tests use this command:\n\n    npm test\n\nBefore running make sure you've installed package (`npm install`) and if you\nrunning some specific adapter tests, ensure you've configured database\ncorrectly (host, port, username, password).\n\n## Contributing\n\nIf you have found a bug please try to write unit test before reporting. Before\nsubmit pull request make sure all tests still passed. Check\n[roadmap](http://1602.github.com/jugglingdb/roadmap.3.html), github issues if you want to\nhelp. Contribution to docs highly appreciated. Contents of man pages and\nhttp://1602.github.com/jugglingdb/ generated from md files stored in this repo at ./docs repo\n\n## MIT License\n\n    Copyright (C) 2011 by Anatoliy Chakkaev <mail [åt] anatoliy [døt] in>\n\n    Permission is hereby granted, free of charge, to any person obtaining a copy\n    of this software and associated documentation files (the \"Software\"), to deal\n    in the Software without restriction, including without limitation the rights\n    to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n    copies of the Software, and to permit persons to whom the Software is\n    furnished to do so, subject to the following conditions:\n\n    The above copyright notice and this permission notice shall be included in\n    all copies or substantial portions of the Software.\n\n    THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n    FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n    AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n    LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n    OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n    THE SOFTWARE.\n\n\n[![Bitdeli Badge](https://d2weczhvl823v0.cloudfront.net/1602/jugglingdb/trend.png)](https://bitdeli.com/free \"Bitdeli Badge\")\n\n[coveralls-url]: https://coveralls.io/github/1602/jugglingdb\n[coveralls-image]: https://coveralls.io/repos/github/1602/jugglingdb/badge.svg?branch=master\n[build-url]: https://circleci.com/gh/1602/jugglingdb\n[build-image]: https://circleci.com/gh/1602/jugglingdb.svg?style=shield\n[npm-image]: https://img.shields.io/npm/v/jugglingdb.svg\n[npm-url]: https://npmjs.org/package/jugglingdb\n[downloads-image]: https://img.shields.io/npm/dm/jugglingdb.svg\n[downloads-url]: https://npmjs.org/package/jugglingdb\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/1602/jugglingdb.git"
  },
  "scripts": {
    "prepublish": "make build",
    "test": "mocha --bail --reporter spec --check-leaks test/",
    "test-babel": "mocha --compilers js:babel-register --bail --reporter spec --check-leaks test/",
    "test-ci-babel": "node_modules/mocha/bin/_mocha --compilers js:babel-register --reporter spec --check-leaks test/",
    "test-ci-native": "istanbul cover node_modules/mocha/bin/_mocha --report lcovonly -- --reporter spec --check-leaks test/",
    "test-coverage": "istanbul cover node_modules/.bin/_mocha -- --reporter landing --no-exit --check-leaks test/"
  },
  "version": "2.0.0-rc8"
}
